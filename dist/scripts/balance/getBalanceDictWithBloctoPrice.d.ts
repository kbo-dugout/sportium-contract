export declare const getBalanceDictWithBloctoPrice = "import FungibleToken from 0xFungibleToken\nimport FusdUsdtSwapPair from 0xFusdUsdtSwapPair\n\nimport Elvn from 0xElvn\nimport FUSD from 0xFUSD\nimport FlowToken from 0xFlowToken\nimport FlowSwapPair from 0xFlowSwapPair\nimport TeleportedSportiumToken from 0xTeleportedSportiumToken\nimport SprtUsdtSwapPair from 0xSprtUsdtSwapPair\n\npub fun main(address: Address): {String: UFix64} {\n    let account = getAccount(address)\n    \n    let elvnRef = account.getCapability(/public/elvnBalance)\n        .borrow<&Elvn.Vault{FungibleToken.Balance}>()\n        ?? panic(\"Could not borrow Balance reference to the Elvn Vault\")\n\n    let fusdRef = account.getCapability(/public/fusdBalance)\n        .borrow<&FUSD.Vault{FungibleToken.Balance}>()\n        ?? panic(\"Could not borrow Balance reference to the FUSD Vault\")\n    \n    let flowRef = account.getCapability(/public/flowTokenBalance)\n        .borrow<&FlowToken.Vault{FungibleToken.Balance}>()\n        ?? panic(\"Could not borrow Balance reference to the FLOW Vault\")\n\n    let sportiumRef = account.getCapability(/public/TeleportedSportiumTokenBalance)\n        .borrow<&TeleportedSportiumToken.Vault{FungibleToken.Balance}>()\n        ?? panic(\"Could not borrow Balance reference to the TeleportedSportium Vault\")\n\n    let flowFUSDPairQuote = FlowSwapPair.quoteSwapExactToken1ForToken2(\n        amount: 1.0 * (1.0 - FlowSwapPair.feePercentage)\n    )\n\n    let sprtUsdtPairQuote = SprtUsdtSwapPair.quoteSwapExactToken1ForToken2(\n        amount: 1.0 * (1.0 - SprtUsdtSwapPair.feePercentage)\n    )\n\n    return {\n        \"elvn\": elvnRef.balance,\n        \"fusd\": fusdRef.balance,\n        \"flow\": flowRef.balance,\n        \"sportium\": sportiumRef.balance,\n        \"bloctoSwapFlowFUSDPairPrice\": flowFUSDPairQuote,\n        \"bloctoSwapSprtUsdtPairPrice\": sprtUsdtPairQuote\n    }\n}\n";
