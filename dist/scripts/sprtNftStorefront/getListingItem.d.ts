export declare const getListingItem = "import NonFungibleToken from 0xNonFungibleToken\n\nimport SprtNFTStorefront from 0xSprtNFTStorefront\nimport Moments from 0xMoments\n\npub struct SaleItem {\n    pub let itemID: UInt64\n    pub let metadata: {String: String}\n    pub let owner: Address\n    pub let price: UFix64\n\n    init(itemID: UInt64, metadata: {String: String}, owner: Address, price: UFix64) {\n        self.itemID = itemID\n        self.metadata = metadata\n        self.owner = owner\n        self.price = price\n    }\n}\n\npub fun main(address: Address, listingResourceID: UInt64): SaleItem? {\n    let account = getAccount(address)\n\n    if let storefrontRef = account.getCapability<&SprtNFTStorefront.Storefront{SprtNFTStorefront.StorefrontPublic}>(SprtNFTStorefront.StorefrontPublicPath).borrow() {\n        if let listing = storefrontRef.borrowListing(listingResourceID: listingResourceID) {\n            let details = listing.getDetails()\n\n            let itemID = details.nftID\n            let itemPrice = details.salePrice\n\n            if let collection = account.getCapability<&Moments.Collection{NonFungibleToken.CollectionPublic, Moments.MomentsCollectionPublic}>(Moments.CollectionPublicPath).borrow() {\n                if let item = collection.borrowMoment(id: itemID) {\n                    return SaleItem(itemID: itemID, metadata: item.getMetadata(), owner: address, price: itemPrice)\n                }\n            }\n        }\n    }\n\n    return nil\n}\n";
