export declare const initializeAccount = "import FungibleToken from 0xFungibleToken\nimport NonFungibleToken from 0xNonFungibleToken\nimport FUSD from 0xFUSD\nimport Moments from 0xMoments\nimport Elvn from 0xElvn\nimport SprtNFTStorefront from 0xSprtNFTStorefront\n\npub fun setupFUSD(account: AuthAccount)  {\n  if account.borrow<&FUSD.Vault>(from: /storage/fusdVault) == nil {\n    account.save(<-FUSD.createEmptyVault(), to: /storage/fusdVault)\n\n    account.link<&FUSD.Vault{FungibleToken.Receiver}>(\n        /public/elvnReceiver,\n        target: /storage/elvnVault\n    )\n\n    account.link<&FUSD.Vault{FungibleToken.Balance}>(\n        /public/elvnBalance,\n        target: /storage/elvnVault\n    )\n  }\n}\n\npub fun setupElvn(account: AuthAccount) {\n  if account.borrow<&Elvn.Vault>(from: /storage/elvnVault) == nil {\n    account.save(<-Elvn.createEmptyVault(), to: /storage/elvnVault)\n\n    account.link<&Elvn.Vault{FungibleToken.Receiver}>(\n        /public/elvnReceiver,\n        target: /storage/elvnVault\n    )\n\n    account.link<&Elvn.Vault{FungibleToken.Balance}>(\n        /public/elvnBalance,\n        target: /storage/elvnVault\n    )\n  }\n}\n\npub fun setupMoments(account: AuthAccount) {\n  if account.borrow<&Moments.Collection>(from: Moments.CollectionStoragePath) == nil {\n      let collection <- Moments.createEmptyCollection()\n      account.save(<-collection, to: Moments.CollectionStoragePath)\n\n      account.link<&Moments.Collection{NonFungibleToken.CollectionPublic, Moments.MomentsCollectionPublic}>(Moments.CollectionPublicPath, target: Moments.CollectionStoragePath)\n  }\n}\n\npub fun setupSprtStorefront(account: AuthAccount)  {\n  if account.borrow<&SprtNFTStorefront.Storefront>(from: SprtNFTStorefront.StorefrontStoragePath) == nil {\n      let storefront <- SprtNFTStorefront.createStorefront()\n      account.save(<-storefront, to: SprtNFTStorefront.StorefrontStoragePath)\n\n      account.link<&SprtNFTStorefront.Storefront{SprtNFTStorefront.StorefrontPublic}>(SprtNFTStorefront.StorefrontPublicPath, target: SprtNFTStorefront.StorefrontStoragePath)\n  }\n}\n\ntransaction {\n  prepare(account: AuthAccount) {\n    setupFUSD(account: account)\n    setupElvn(account: account)\n    setupMoments(account: account)\n    setupSprtStorefront(account: account)\n  }\n}\n";
