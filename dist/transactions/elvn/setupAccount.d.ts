export declare const setupAccount = "import FungibleToken from 0xstd/FungibleToken\n\nimport Elvn from 0xsprt/Elvn\n\n// This transaction is a template for a transaction\n// to add a Vault resource to their account\n// so that they can use the Elvn\n\ntransaction {\n    prepare(signer: AuthAccount) {\n        if signer.borrow<&Elvn.Vault>(from: /storage/elvnVault) == nil {\n            // Create a new Elvn Vault and put it in storage\n            signer.save(<-Elvn.createEmptyVault(), to: /storage/elvnVault)\n\n            // Create a public capability to the stored Vault that only exposes\n            // the deposit method through the Receiver interface\n            //\n            signer.link<&Elvn.Vault{FungibleToken.Receiver}>(\n                /public/elvnReceiver,\n                target: /storage/elvnVault\n            )\n\n            // Create a public capability to the stored Vault that only exposes\n            // the balance field through the Balance interface\n            //\n            signer.link<&Elvn.Vault{FungibleToken.Balance}>(\n                /public/elvnBalance,\n                target: /storage/elvnVault\n            )\n        }\n    }\n}\n";
