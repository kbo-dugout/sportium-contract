export declare const depositElvn = "import FungibleToken from 0xstd/FungibleToken\n\nimport Elvn from 0xsprt/Elvn\nimport ElvnFUSDTreasury from 0xsprt/ElvnFUSDTreasury\n\ntransaction(amount: UFix64) {\n  // The Vault resource that holds the tokens that are being transfered\n  let depositVault: @FungibleToken.Vault\n\n  prepare(account: AuthAccount) {\n        // Get a reference to the account's stored vault\n        let vaultRef = account.borrow<&Elvn.Vault>(from: /storage/elvnVault)\n            ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n        // Withdraw tokens from the account's stored vault\n        self.depositVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n        ElvnFUSDTreasury.depositElvn(vault: <- self.depositVault)\n    }\n}\n";
