export declare const mintWithDeopsit = "import FungibleToken from 0xFungibleToken\n\nimport Elvn from 0xElvn\nimport AirdropElvn from 0xAirdropElvn\n\ntransaction(amount: UFix64) {\n    let tokenAdmin: &Elvn.Administrator\n\n\tlet airdropAdmin: &AirdropElvn.Administrator\n\n    prepare(signer: AuthAccount) {\n        self.tokenAdmin = signer\n        \t.borrow<&Elvn.Administrator>(from: /storage/elvnAdmin)\n        \t?? panic(\"Signer is not the token admin\")\n\t\tself.airdropAdmin = signer\n\t\t\t.borrow<&AirdropElvn.Administrator>(from: /storage/sportiumAirdropElvnAdmin)\n\t\t\t?? panic(\"Signer is not the airdrop admin\")\n    }\n\n    execute {\n        let minter <- self.tokenAdmin.createNewMinter(allowedAmount: amount)\n        let vault <- minter.mintTokens(amount: amount)\n\n\t\tself.airdropAdmin.depositElvn(vault: <-vault)\n        destroy minter\n    }\n}\n";
