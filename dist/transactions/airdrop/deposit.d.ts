export declare const deposit = "import FungibleToken from 0xstd/FungibleToken\n\nimport Elvn from 0xsprt/Elvn\nimport AirdropElvn from 0xsprt/AirdropElvn\n\ntransaction(amount: UFix64) {\n\tlet airdropAdmin: &AirdropElvn.Administrator\n\n    let sentVault: @Elvn.Vault\n\n    prepare(signer: AuthAccount) {\n\t\tself.airdropAdmin = signer\n\t\t\t.borrow<&AirdropElvn.Administrator>(from: /storage/sportiumAirdropElvnAdmin)\n\t\t\t?? panic(\"Signer is not the airdrop admin\")\n\n        let vaultRef = signer.borrow<&Elvn.Vault>(from: /storage/elvnVault)\n        ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n        self.sentVault <- (vaultRef.withdraw(amount: amount) as! @Elvn.Vault)\n    }\n\n    execute {\n\t\tself.airdropAdmin.depositElvn(vault: <-self.sentVault)\n    }\n}\n";
